 
&НаСервере
Процедура УсловноеОформлениеНаСервере(Знач МаксЗнач, Знач МинЗнач)
	
	Для Каждого ЭлемТЗ  из ТаблицаЗначений Цикл 
		
		ЭлементУО1 = УсловноеОформление.Элементы.Добавить();  
		ЭлементУО2 = УсловноеОформление.Элементы.Добавить(); 
		ЭлементУО1.Использование = Истина; 
		ЭлементУО2.Использование = Истина;
		
		ОформляемоеПоле = ЭлементУО1.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗначенийСписок");
		ОформляемоеПоле2 = ЭлементУО2.Поля.Элементы.Добавить();
		ОформляемоеПоле2.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗначенийСписок");
		
		Отбор1 = ЭлементУО1.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор2 = ЭлементУО2.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		Отбор1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаЗначений.Список"); 
		Отбор2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаЗначений.Список"); 
		
		Отбор1.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;  
		Отбор2.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;  
		
		Отбор1.ПравоеЗначение = МинЗнач; 
		Отбор2.ПравоеЗначение = МаксЗнач;   
		Отбор1.Использование = Истина;  
		Отбор2.Использование = Истина; 
		
		ЭлементУО1.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);  
		ЭлементУО2.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Зеленый);  
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокНаСервере()
	
	ТаблицаЗначений.Очистить(); 
	УсловноеОформление.Элементы.Очистить();
	
	Значение = (Pow(Число,2));  
	СписокПроверки = Новый СписокЗначений;
	МассивПроверки = Новый Массив;
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(); 
	Для Элемент = 1 По Число Цикл
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, Значение*2)-Значение; 
		ЭлемТЗ = ТаблицаЗначений.Добавить();
		ЭлемТЗ.Список = СлучайноеЧисло;
		СписокПроверки.Добавить(СлучайноеЧисло); 
	КонецЦикла;	 
	
	СписокПроверки.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	МассивПроверки = СписокПроверки.ВыгрузитьЗначения();
	МинЗнач = МассивПроверки[0];
	СписокПроверки.СортироватьПоЗначению(НаправлениеСортировки.Убыв); 
	МассивПроверки = СписокПроверки.ВыгрузитьЗначения();
	МаксЗнач = МассивПроверки[0];
	
	УсловноеОформлениеНаСервере(МаксЗнач, МинЗнач);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписок(Команда) 
	ЗаполнитьСписокНаСервере();
КонецПроцедуры


&НаСервере
Процедура УдалитьЛишнееНаСервере() 
	
	СписокОставить  = Новый СписокЗначений;
	МассивОставить  = Новый Массив; 
	СписокУдаляемых = Новый СписокЗначений;
	МассивУдаляемых = Новый Массив; 
	
	Для Каждого ЭлемСписка  из ТаблицаЗначений   Цикл
		Если ЭлемСписка.Список <= 0 Тогда  
			СписокУдаляемых.Добавить(ЭлемСписка.Список); 
		Иначе
			СписокОставить.Добавить(ЭлемСписка.Список); 
		Конецесли;	
	КонецЦикла;
	
	ТаблицаЗначений.Очистить();
	УсловноеОформление.Элементы.Очистить(); 
	
	Для Каждого ЭлемСписка Из СписокОставить Цикл
		ЭлемТЗ = ТаблицаЗначений.Добавить();
		ЭлемТЗ.Список = ЭлемСписка.Значение;
	КонецЦикла; 
	
	СписокОставить.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	МассивОставить = СписокОставить.ВыгрузитьЗначения();
	МинЗнач = МассивОставить[0];
	СписокОставить.СортироватьПоЗначению(НаправлениеСортировки.Убыв); 
	МассивОставить = СписокОставить.ВыгрузитьЗначения();
	МаксЗнач = МассивОставить[0];
	
	УсловноеОформлениеНаСервере(МаксЗнач, МинЗнач);
	
	СписокУдаляемых.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	МассивУдаляемых = СписокУдаляемых.ВыгрузитьЗначения();
	Сообщить("Удалено значений: " + МассивУдаляемых.Количество() + " (" + СтрСоединить(МассивУдаляемых, ", ") + ").");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишнее(Команда)
	УдалитьЛишнееНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтветственныеЛицаНачало.ФИО КАК Ответственный,
	|	МИНИМУМ(ОтветственныеЛицаНачало.ДатаПриема) КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(ОтветственныеЛицаОконч.ДатаПриема, &ТекДата)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПериодОтветственный
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛицаНачало
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛицаОконч
	|		ПО ОтветственныеЛицаНачало.ДатаПриема < ОтветственныеЛицаОконч.ДатаПриема
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтветственныеЛицаНачало.ФИО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Платформы.Название КАК Платформа,
	|	ВТ_ПериодОтветственный.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.Платформы КАК Платформы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодОтветственный КАК ВТ_ПериодОтветственный
	|		ПО Платформы.ДатаРелиза >= ВТ_ПериодОтветственный.ДатаНачала
	|			И Платформы.ДатаРелиза < ВТ_ПериодОтветственный.ДатаОкончания";  
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();     
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		СтрокаТЗ = ТаблицаЗначений2.Добавить();
		СтрокаТЗ.Платформа = ВыборкаДетальныеЗаписи.Платформа;
		СтрокаТЗ.Ответственный = ВыборкаДетальныеЗаписи.Ответственный;
	КонецЦикла;
	
КонецПроцедуры

