 
&НаСервере
Процедура УсловноеОформлениеНаСервере(Знач Значение, Знач Цвет)
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();  
		ЭлементУО.Использование = Истина; 
		
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗначенийСписок");
		
		Отбор = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));   
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаЗначений.Список"); 
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;  
		Отбор.ПравоеЗначение = Значение; 
		Отбор.Использование = Истина;  
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Цвет); 
		
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокНаСервере()
	
	ТаблицаЗначений.Очистить(); 
	УсловноеОформление.Элементы.Очистить();
	
	Значение = (Pow(Число,2)); 
	МинЗнач  = Значение;
	МаксЗнач = -Значение;
	СписокПроверки = Новый СписокЗначений;
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(); 
	Для Элемент = 1 По Число Цикл
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, Значение*2)-Значение; 
		ЭлемТЗ = ТаблицаЗначений.Добавить();
		ЭлемТЗ.Список = СлучайноеЧисло;
		СписокПроверки.Добавить(СлучайноеЧисло); 
		МинЗнач = Мин(МинЗнач,СлучайноеЧисло);
		МаксЗнач = Макс(МаксЗнач,СлучайноеЧисло);
	КонецЦикла;	 
	
	Для Каждого ЭлемТЗ  из ТаблицаЗначений Цикл 
		УсловноеОформлениеНаСервере(МинЗнач, WebЦвета.Красный);	
		УсловноеОформлениеНаСервере(МаксЗнач, WebЦвета.Зеленый);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписок(Команда)
	ОчиститьСообщения();
	ЗаполнитьСписокНаСервере();
КонецПроцедуры


&НаСервере
Процедура УдалитьЛишнееНаСервере() 
		
	СписокОставить  = Новый СписокЗначений;
	СписокУдаляемых = Новый СписокЗначений;
	МассивУдаляемых = Новый Массив; 
	
	Для Каждого ЭлемСписка  из ТаблицаЗначений   Цикл
		Если ЭлемСписка.Список <= 0 Тогда  
			СписокУдаляемых.Добавить(ЭлемСписка.Список); 
		Иначе
			СписокОставить.Добавить(ЭлемСписка.Список); 
		Конецесли;	
	КонецЦикла;
	
	ТаблицаЗначений.Очистить();
	УсловноеОформление.Элементы.Очистить();
	
	МинЗнач  = (Pow(Число,2));
	МаксЗнач = 0;
	
	Для Каждого ЭлемСписка Из СписокОставить Цикл
		ЭлемТЗ = ТаблицаЗначений.Добавить();
		ЭлемТЗ.Список = ЭлемСписка.Значение;
		МинЗнач = Мин(МинЗнач,ЭлемСписка.Значение);
		МаксЗнач = Макс(МаксЗнач,ЭлемСписка.Значение);
	КонецЦикла; 
	
	Для Каждого ЭлемТЗ  из ТаблицаЗначений Цикл 
		УсловноеОформлениеНаСервере(МинЗнач, WebЦвета.Красный);	
		УсловноеОформлениеНаСервере(МаксЗнач, WebЦвета.Зеленый);	
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю; 
	Если СписокУдаляемых.Количество()= 0 Тогда
		Сообщение.Текст = "Значения для удаления отсутствуют."; 
	Иначе 
		СписокУдаляемых.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		МассивУдаляемых = СписокУдаляемых.ВыгрузитьЗначения();
		Сообщение.Текст = "Удалено значений: "+ МассивУдаляемых.Количество()+ " (" + СтрСоединить(МассивУдаляемых, ", ") + ")."; 
	КонецЕсли;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишнее(Команда) 
	ОчиститьСообщения();
	УдалитьЛишнееНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтветственныеЛицаНачало.ФИО КАК Ответственный,
	|	МИНИМУМ(ОтветственныеЛицаНачало.ДатаПриема) КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(ОтветственныеЛицаОконч.ДатаПриема, &ТекДата)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПериодОтветственный
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛицаНачало
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛицаОконч
	|		ПО ОтветственныеЛицаНачало.ДатаПриема < ОтветственныеЛицаОконч.ДатаПриема
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтветственныеЛицаНачало.ФИО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Платформы.Название КАК Платформа,
	|	ЕСТЬNULL(ВТ_ПериодОтветственный.Ответственный, ""Нет ответственного"") КАК Ответственный
	|ИЗ
	|	РегистрСведений.Платформы КАК Платформы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодОтветственный КАК ВТ_ПериодОтветственный
	|		ПО Платформы.ДатаРелиза >= ВТ_ПериодОтветственный.ДатаНачала
	|			И Платформы.ДатаРелиза < ВТ_ПериодОтветственный.ДатаОкончания";  
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()); 
	
    ТаблицаЗначений2.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

